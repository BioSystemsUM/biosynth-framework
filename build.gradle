apply plugin: 'eclipse'
apply plugin: 'idea'
apply from: "./libraries.gradle"

/*
jar {
    manifest {
        attributes 'Implementation-Title': 'biosynth-framework',
                   'Implementation-Version': '0.9.0-SNAPSHOT'
    }
}
*/



allprojects {
  //apply plugin: 'java'
  repositories {
    mavenCentral()
    mavenLocal()
    //maven { url 'http://192.168.1.99/nexus/content/groups/public/' }
    //maven { url 'http://193.137.11.210/nexus/content/groups/public/' }
    maven { url 'https://nexus.bio.di.uminho.pt/content/groups/public/' }
    maven { url 'http://www.ebi.ac.uk/~maven/m2repo' }
    maven { url 'http://biojava.org/download/maven/' }
  }
}

ext {
  expectedGradleVersion = '5.5'
}

//task wrapper(type: Wrapper) {
//    gradleVersion = '5.5' //we want gradle 2.10 to run this project
//}

configurations {
    compile
}

  allprojects {
    tasks.withType(Javadoc) {
      //options.addStringOption('Xdoclint:none', '-quiet')
    }
  }

subprojects { subProject ->
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'idea'
  apply plugin: 'eclipse'
  
  group = 'pt.uminho.sysbio.biosynthframework'
  version = '0.9.0-JRE7'
  
  targetCompatibility = 1.8
  sourceCompatibility = 1.8
  

  
  task copyRuntimeLibs(type: Copy) {
    into "../jars"
    from configurations.compile
  }
  
  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }
  
  task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
  }

  artifacts {
    //archives javadocJar
    archives sourcesJar
  }
  
  defaultTasks 'build'
  buildDir = "target"
  //org.gradle.java.home = 'C:/Program Files/Java/jdk1.8.0_101'
  
  dependencies {
    compile libraries.guava
    compile libraries.joda_time
    compile libraries.commons_io, libraries.commons_codec, libraries.commons_lang3
    compile libraries.json
    compile libraries.json_api_core, libraries.json_api_databind, libraries.json_api_annotations
    compile libraries.json_api_datatype_joda
    compile libraries.json_api_dataformat_xml
    compile libraries.apache_poi
    compile libraries.apache_poi_ooxml
    compile libraries.jbool
    compile libraries.javaluator
    compile 'org.jadira.usertype:usertype.core:3.0.0.CR1'
    
    // logging
    compile libraries.slf4j_api
    compile libraries.logback
    
    testCompile( libraries.junit )
  }
  
  test {
  	systemProperties 'property': 'value'
  }
  
  uploadArchives {
    repositories {
     flatDir {
       dirs 'repos'
     }
    }
  }
}